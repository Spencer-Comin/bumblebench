<?xml version="1.0"?>

<!--
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
	    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
This is a build.xml which executes the main openjdk.build build.xml
to allow tools which invoke a root level build.xml file to
execute a build.
-->

<project name="net.adoptopenjdk.bumblebench.unsafe" basedir="."
    xmlns:if="ant:if"
    xmlns:unless="ant:unless">
    <dirname property="unsafe-dir" file="${ant.file.net.adoptopenjdk.bumblebench.unsafe}"/>

    <target name="generate-get-benchmark" description="generate an unsafe get benchmark">
        <exec executable="gcc"
        failonerror="true"
        input="${unsafe-dir}/templates/Get.java.template"
        output="${unsafe-dir}/Get${type-mode}Bench.java">
            <arg line="-E -CC -P -D'TYPE=${type}' -D'TYPEMODE=${type-mode}' -D'UPDATE_ACC(acc,val)=${update-acc}' -D'ACC_TYPE=${acc-type}'"/>
            <arg line="-DNO_NATIVE" if:set="no-native"/>
            <arg line="-"/>
        </exec>
    </target>

    <target name="generate-put-benchmark" description="generate an unsafe put benchmark">
        <exec executable="gcc"
        failonerror="true"
        input="${unsafe-dir}/templates/Put.java.template"
        output="${unsafe-dir}/PutConst${type-mode}Bench.java">
            <arg line="-E -CC -P -D'TYPE=${type}' -D'TYPEMODE=${type-mode}' -D'INIT=${init}' -DCONST"/>
            <arg line="-DNO_NATIVE" if:set="no-native"/>
            <arg line="-"/>
        </exec>
        <exec executable="gcc"
        failonerror="true"
        input="${unsafe-dir}/templates/Put.java.template"
        output="${unsafe-dir}/PutVar${type-mode}Bench.java">
            <arg line="-E -CC -P -D'TYPE=${type}' -D'TYPEMODE=${type-mode}' -D'INIT=${init}' -D'UPDATE_VAL(val)=${update-val}'"/>
            <arg line="-DNO_NATIVE" if:set="no-native"/>
            <arg line="-"/>
        </exec>
    </target>

    <target name="get-benchmarks">
        <parallel>
            <antcall target="generate-get-benchmark">
                <param name="type" value="Object"/>
                <param name="type-mode" value="Reference${mode}"/>
                <param name="update-acc" value="acc += (val)==null ? 1 : 0"/>
                <param name="acc-type" value="long"/>
                <param name="no-native" value="true"/>
            </antcall>
            <antcall target="generate-get-benchmark">
                <param name="type" value="int"/>
                <param name="type-mode" value="Int${mode}"/>
                <param name="update-acc" value="acc += val"/>
                <param name="acc-type" value="int"/>
            </antcall>
            <antcall target="generate-get-benchmark">
                <param name="type" value="boolean"/>
                <param name="type-mode" value="Boolean${mode}"/>
                <param name="update-acc" value="acc += (val) ? 1 : 0"/>
                <param name="acc-type" value="long"/>
            </antcall>
            <antcall target="generate-get-benchmark">
                <param name="type" value="byte"/>
                <param name="type-mode" value="Byte${mode}"/>
                <param name="update-acc" value="acc += val"/>
                <param name="acc-type" value="byte"/>
            </antcall>
            <antcall target="generate-get-benchmark">
                <param name="type" value="short"/>
                <param name="type-mode" value="Short${mode}"/>
                <param name="update-acc" value="acc += val"/>
                <param name="acc-type" value="short"/>
            </antcall>
            <antcall target="generate-get-benchmark">
                <param name="type" value="char"/>
                <param name="type-mode" value="Char${mode}"/>
                <param name="update-acc" value="acc += val"/>
                <param name="acc-type" value="char"/>
            </antcall>
            <antcall target="generate-get-benchmark">
                <param name="type" value="long"/>
                <param name="type-mode" value="Long${mode}"/>
                <param name="update-acc" value="acc += val"/>
                <param name="acc-type" value="long"/>
            </antcall>
            <antcall target="generate-get-benchmark">
                <param name="type" value="float"/>
                <param name="type-mode" value="Float${mode}"/>
                <param name="update-acc" value="acc += val"/>
                <param name="acc-type" value="float"/>
            </antcall>
            <antcall target="generate-get-benchmark">
                <param name="type" value="double"/>
                <param name="type-mode" value="Double${mode}"/>
                <param name="update-acc" value="acc += val"/>
                <param name="acc-type" value="double"/>
            </antcall>
        </parallel>
    </target>

    <target name="put-benchmarks">
        <parallel>
            <antcall target="generate-put-benchmark">
                <param name="type" value="Object"/>
                <param name="type-mode" value="Reference${mode}"/>
                <param name="init" value="null, other1=new Object(), other2=new Object(); boolean selector = true;"/>
                <param name="update-val" value="val=selector?other1:other2"/>
                <param name="no-native" value="true"/>
            </antcall>
            <antcall target="generate-put-benchmark">
                <param name="type" value="int"/>
                <param name="type-mode" value="Int${mode}"/>
                <param name="init" value="0x5a5a5a5a"/>
                <param name="update-val" value="val++"/>
            </antcall>
            <antcall target="generate-put-benchmark">
                <param name="type" value="boolean"/>
                <param name="type-mode" value="Boolean${mode}"/>
                <param name="init" value="true, nval=false, nnval=true"/>
                <param name="update-val" value="boolean tmp=val; val=nval; nval=nnval; nnval=Boolean.logicalXor(tmp,nnval)"/>
            </antcall>
            <antcall target="generate-put-benchmark">
                <param name="type" value="byte"/>
                <param name="type-mode" value="Byte${mode}"/>
                <param name="init" value="0x5a"/>
                <param name="update-val" value="val++"/>
            </antcall>
            <antcall target="generate-put-benchmark">
                <param name="type" value="short"/>
                <param name="type-mode" value="Short${mode}"/>
                <param name="init" value="0x5a5a"/>
                <param name="update-val" value="val++"/>
            </antcall>
            <antcall target="generate-put-benchmark">
                <param name="type" value="char"/>
                <param name="type-mode" value="Char${mode}"/>
                <param name="init" value="0x5a"/>
                <param name="update-val" value="val++"/>
            </antcall>
            <antcall target="generate-put-benchmark">
                <param name="type" value="long"/>
                <param name="type-mode" value="Long${mode}"/>
                <param name="init" value="0x5a5a5a5a5a5a5a5aL"/>
                <param name="update-val" value="val++"/>
            </antcall>
            <antcall target="generate-put-benchmark">
                <param name="type" value="float"/>
                <param name="type-mode" value="Float${mode}"/>
                <param name="init" value="123.456f"/>
                <param name="update-val" value="val += 420.69f"/>
            </antcall>
            <antcall target="generate-put-benchmark">
                <param name="type" value="double"/>
                <param name="type-mode" value="Double${mode}"/>
                <param name="init" value="123.456d"/>
                <param name="update-val" value="val += 420.69d"/>
            </antcall>
        </parallel>
    </target>

    <target name="benchmarks">
        <parallel>
            <!-- gets -->
            <antcall target="get-benchmarks">
                <param name="mode" value=""/>
            </antcall>
            <antcall target="get-benchmarks">
                <param name="mode" value="Volatile"/>
            </antcall>
            <antcall target="get-benchmarks">
                <param name="mode" value="Acquire"/>
            </antcall>
            <antcall target="get-benchmarks">
                <param name="mode" value="Opaque"/>
            </antcall>

            <!-- puts -->
            <antcall target="put-benchmarks">
                <param name="mode" value=""/>
            </antcall>
            <antcall target="put-benchmarks">
                <param name="mode" value="Volatile"/>
            </antcall>
            <antcall target="put-benchmarks">
                <param name="mode" value="Release"/>
            </antcall>
            <antcall target="put-benchmarks">
                <param name="mode" value="Opaque"/>
            </antcall>
        </parallel>
    </target>
</project>
